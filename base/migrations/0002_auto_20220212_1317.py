# Generated by Django 3.2 on 2022-02-12 07:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('paymentMethod', models.CharField(blank=True, max_length=200, null=True)),
                ('taxPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ('shippingPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('totalPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('isPaid', models.BooleanField(default=False)),
                ('paidAt', models.DateTimeField(blank=True, null=True)),
                ('isDelivered', models.BooleanField(default=False)),
                ('deliverAt', models.DateTimeField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Cancel', 'Cancel'), ('Pending Payment', 'Pending Payment'), ('On Hold', 'On Hold'), ('Waiting For Payment', 'Waiting For Payment'), ('Processing', 'Processing'), ('Done', 'Done')], default='Pending Payment', max_length=220)),
                ('orderStatus', models.CharField(blank=True, choices=[('Cancel', 'Cancel'), ('Pending Payment', 'Pending Payment'), ('On Hold', 'On Hold'), ('Waiting For Payment', 'Waiting For Payment'), ('Processing', 'Processing'), ('Done', 'Done')], default='On Hold', max_length=220, null=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='static/images')),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterField(
            model_name='restaurant',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('address', models.CharField(blank=True, max_length=220, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('postalCode', models.CharField(blank=True, max_length=20, null=True)),
                ('number', models.CharField(blank=True, max_length=30, null=True)),
                ('shippingPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=13, null=True)),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('vendor_paid', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('qty', models.IntegerField(blank=True, default=0, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=13, null=True)),
                ('image', models.CharField(blank=True, max_length=200, null=True)),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.item')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.order')),
                ('restaurant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurants', to='base.restaurant')),
            ],
        ),
    ]
